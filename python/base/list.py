# 리스트

odd = [1,3,5,7,9]
# 리스트는 대괄호[]로 감싸고 각 요솟값은 쉼표,로 구분한다.
# 리스트명 = [요소1, 요소2, 요소3, ...]

# 리스트 형태
a = []
b = [1, 2, 3]
c = ["Life", "is", "too", "short"]
d = [1, 2, "Life","is"]
e = [1, 2, ["Life", "is"]]

# 비어 있는 리스트는 a = list() 로 생성할 수 있다.
# 리스트는 어떠한 자료형도 포함할 수 있다.

# 리스트의 인덱싱과 슬라이싱
# 리스트의 인덱싱
a = [1,2,3]
a

# a[0]은 리스트 a의 첫번째 요솟값을 말한다.
a[0] # 1

a[0] + a[2] # 1 + 3 = 4

a[-1] # 3 리스트 a의 마지막 요솟값

a = [1, 2, 3, ['a', 'b', 'c', 'd']]
a[0]
a[-1] # ['a', 'b', 'c', 'd']
a[3] # ['a', 'b', 'c', 'd']

# 인덱스 안의 인덱스 사용하기
a[-1][0] # a
a[-1][1] # b
a[-1][2] # c
a[-1][3] # d

# 리스트의 슬라이싱
a = [1,2,3,4,5]
a[0:2] # [1,2]

a = "12345"
a[0:2] # 12

a = [1,2,3,4,5]
b = a[:2]
c = a[2:]
b # [1,2]
c # [3,4,5]

# 중첩된 리스트에서 슬라이싱하기
a = [1,2,3,['a','b','c'],4,5]
a[2:5] # [3, ['a', 'b', 'c'], 4]
a[3][2] # c

# 리스트 연산하기 =====
# 리스트 더하기
a = [1,2,3]
b = [4,5,6]
a+b # [1,2,3,4,5,6]

# 리스트 반복하기
a = [1,2,3]
a * 3 # [1,2,3,1,2,3,1,2,3]

# 리스트 길이 구하기
a = [1,2,3]
len(a) # 3

# 리스트의 수정과 삭제 =====
# 리스트의 값 수정하기

a = [1,2,3]
a[2] = 4
a # [1,2,4]

# del 함수를 사용해 리스트 요소 삭제하기
a = [1,2,3]
del a[1]
a # [1,3]

# del a[x]는 x번째 요솟값을 삭제한다.

# 슬라이싱 기법을 사용하여 리스트의 요소 여러개를 한꺼번에 삭제
a = [1,2,3,4,5]
del a[2:]
a # [1,2]

# 리스트 관련 함수 =====
# 리스트에 요소 추가하기 - append
a = [1,2,3]
a.append(4)
a

a.append([5,6])
a

# 리스트 정렬 - sort
a = [1,4,3,2]
a.sort()
a # [1,2,3,4]

# 리스트 뒤집기 - reverse
a = ['a','c','b']
a.reverse()
a # ['b','c','a']

# 인덱스 반환 - index
a = [1,2,3] # index(x) 함수는 리스트에 x값이 있으면 x의 인덱스 값(위치값)을 리턴한다.
a.index(3) # 2
a.index(1) # 0

a.index(0) # 0값이 없으므로 에러 발생

# 리스트 요소 삽입 - insert
# insert(a,b)는 리스트의 a번째 위치에 b를 삽입하는 함수
a = [1,2,3]
a.insert(0,4)
a # [4,1,2,3] 0번째 자리에 4를 삽입

a.insert(3,5)
a # [4,1,2,5,3] 3번째 자리에 5를 삽입

# 리스트 요소 제거 - remove
# remove(x)는 리스트에서 첫 번째로 나오는 x를 삭제하는 함수
a = [1,2,3,1,2,3]
a.remove(3)
a # [1,2,1,2,3] 첫번째 3만 제거

a.remove(3)
a # [1,2,1,2] 

# 리스트 요소 끄집어 내기 - pop
# pop()은 리스트의 맨 마지막 요소를 리턴하고 그 요소는 삭제
a = [1,2,3]
a.pop() # 3
a # [1,2]

# pop(x)는 리스트의 x번째 요소를 리턴하고 그 요소는 삭제
a = [1,2,3]
a.pop(1) # 2
a # [1,3]

# 리스트에 포함된 요소 x의 개수 세기 - count
# count(x)는 리스트 안에 x가 몇개 있는지 조사하여 그 개수를 리턴하는 함수
a = [1,2,3,1]
a.count(1) # 2

# 리스트 확장 - extend
# extend(x)에서 x에는 리스트만 올 수 있으며 원래의 a 리스트에 x 리스트를 더한다.
a = [1,2,3]
a.extend([4,5])
a # [1,2,3,4,5]

b = [6,7]
a.extend(b)
a # [1,2,3,4,5,6,7]

# a.extend([4,5])는 a += [4,5]와 동일하다
# a += [4,5]는 a = a + [4,5]와 동일한 표현식이다.